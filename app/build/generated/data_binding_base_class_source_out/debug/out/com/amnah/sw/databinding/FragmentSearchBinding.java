// Generated by view binder compiler. Do not edit!
package com.amnah.sw.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.amnah.sw.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LottieAnimationView errorLottie;

  @NonNull
  public final LottieAnimationView loadingLottie;

  @NonNull
  public final ImageView searchBtn;

  @NonNull
  public final LottieAnimationView searchLottie;

  @NonNull
  public final RecyclerView searchRecycler;

  @NonNull
  public final EditText searchText;

  private FragmentSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull LottieAnimationView errorLottie, @NonNull LottieAnimationView loadingLottie,
      @NonNull ImageView searchBtn, @NonNull LottieAnimationView searchLottie,
      @NonNull RecyclerView searchRecycler, @NonNull EditText searchText) {
    this.rootView = rootView;
    this.errorLottie = errorLottie;
    this.loadingLottie = loadingLottie;
    this.searchBtn = searchBtn;
    this.searchLottie = searchLottie;
    this.searchRecycler = searchRecycler;
    this.searchText = searchText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.errorLottie;
      LottieAnimationView errorLottie = ViewBindings.findChildViewById(rootView, id);
      if (errorLottie == null) {
        break missingId;
      }

      id = R.id.loadingLottie;
      LottieAnimationView loadingLottie = ViewBindings.findChildViewById(rootView, id);
      if (loadingLottie == null) {
        break missingId;
      }

      id = R.id.searchBtn;
      ImageView searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.searchLottie;
      LottieAnimationView searchLottie = ViewBindings.findChildViewById(rootView, id);
      if (searchLottie == null) {
        break missingId;
      }

      id = R.id.searchRecycler;
      RecyclerView searchRecycler = ViewBindings.findChildViewById(rootView, id);
      if (searchRecycler == null) {
        break missingId;
      }

      id = R.id.searchText;
      EditText searchText = ViewBindings.findChildViewById(rootView, id);
      if (searchText == null) {
        break missingId;
      }

      return new FragmentSearchBinding((ConstraintLayout) rootView, errorLottie, loadingLottie,
          searchBtn, searchLottie, searchRecycler, searchText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
